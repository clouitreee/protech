name: manus-ci
on:
  push: { branches: [ main, '**' ] }
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Usa el token automÃ¡tico; si necesitas PAT, cambia a secrets.GH_TOKEN
          token: ${{ github.token }}
          persist-credentials: false

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "cache=pnpm" >> $GITHUB_OUTPUT; echo "cmd=pnpm install --frozen-lockfile" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then echo "cache=yarn" >> $GITHUB_OUTPUT; echo "cmd=yarn install --frozen-lockfile" >> $GITHUB_OUTPUT
          elif [ -f package-lock.json ]; then echo "cache=npm" >> $GITHUB_OUTPUT; echo "cmd=npm ci --ignore-scripts --no-audit --no-fund" >> $GITHUB_OUTPUT
          else echo "cache=npm" >> $GITHUB_OUTPUT; echo "cmd=npm install --no-audit --fund=false" >> $GITHUB_OUTPUT; fi

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: ${{ steps.pm.outputs.cache }}

      - name: Enable Corepack (if yarn/pnpm)
        if: ${{ steps.pm.outputs.cache != 'npm' }}
        run: corepack enable

      - name: Install deps
        run: ${{ steps.pm.outputs.cmd }}

      - name: Build
        run: npm run build --if-present

  a11y:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - run: npm install --no-audit --fund=false
      - run: npx playwright install --with-deps
      - run: |
          if [ -f tests/a11y.spec.ts ]; then npx playwright test tests/a11y.spec.ts; else echo "a11y tests missing"; fi

